name: pullreq-ci
on:
  push:
    branches:
      - "main"
  pull_request:
jobs:
  pullreq-ci:
    name: golang-unit-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19'
      - uses: actions/checkout@v3
      - name: Create DB/ROLE/SCHEMA
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
          PGPASSWORD=postgres psql -U postgres -h localhost -p 5432 -f ./_tools/postgres/init/init.sql
      - name: Create todoapp schema
        run: |
          go install github.com/k0kubun/sqldef/cmd/psqldef@latest
          psqldef -U todo -W todo -h localhost -p 5432 todotest -f ./_tools/postgres/schema.sql
      - name: Run tests with coverage report output
        run: go test ./... -coverprofile=coverage.out
      - name: create report
        uses: k1LoW/octocov-action@v0
      - name: Notify slack when job failed
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "job_id": "${{ github.job }}",
              "author": "${{ github.event.sender.login }}",
              "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "repo_name": "${{ github.event.repository.full_name }}",
              "status": "${{ job.status }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WORKFLOW_WEBHOOK_URL }}